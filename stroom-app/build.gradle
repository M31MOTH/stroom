apply plugin: 'war'
//apply plugin: 'jetty'
//apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

apply plugin: 'org.akhikhl.gretty'

import org.akhikhl.gretty.JettyStartTask

buildscript {
    repositories {
        jcenter()
        // enable this to use snapshot versions of Gretty:
        // maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}
//
//repositories {
//    jcenter()
//    // enable this to use snapshot versions of Gretty:
//    // maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
//}

//apply plugin: 'org.akhikhl.gretty'

//buildscript {
//    repositories {
//        jcenter()
//    }
//    dependencies {
//        classpath "org.scaldingspoon.gradle:gradle-waroverlay-plugin:0.9.3"
//    }
//}
//apply plugin: 'waroverlay'
//
//dependencies {
//// ("org.jasig.cas:cas-server-webapp:3.5.2@war") {
//
//    runtime project(':stroom-app-gwt@war')
//        transitive = true // setting this to true calculates transitive dependencies for addition to the target WAR
//    }
//
//    runtime project(':stroom-dashboard-gwt@war')
//    transitive = true // setting this to true calculates transitive dependencies for addition to the target WAR
//    }
//}
//
//warOverlay {
//    includeWarJars false // whether to include the jar files in the WAR. Default is false. If false, it might be useful to set transitive to `true` for the WAR dependency so its dependencies will be calculated and added
//}

//war {
////    // ... whatever else you may need
////    exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
//
//    with project(":stroom-app-gwt").war
//}

//war.dependsOn(':stroom-app-gwt:war')

dependencies {
//    providedCompile project(':stroom-app-gwt')
//    providedCompile project(':stroom-dashboard-gwt')

    compile project(':stroom-core-server')
    compile project(':stroom-index-server')
    compile project(':stroom-statistics-server')
    compile project(':stroom-dashboard-server')
    compile project(':stroom-security-server')
    compile project(':stroom-explorer-server')

    // Provide some runtime files such as stroom.properties and log4j.xml
    providedCompile project(':stroom-config')

//    compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.7'
}

//war {
//    from project(':stroom-app-gwt').file("src/main/webapp")
//    from project(':stroom-app-gwt').file("build/gwt/out")
//    from project(':stroom-dashboard-gwt').file("src/main/webapp")
//    from project(':stroom-dashboard-gwt').file("build/gwt/out")
//}

war {
    exclude 'WEB-INF/lib/**'
    exclude 'WEB-INF/classes/**'
}

war.dependsOn(':stroom-app-gwt:gwtCompile', ':stroom-dashboard-gwt:gwtCompile')


//task jettyStart
//task('MyRun', type: jettyStart) {
//doFirst {
//
//}
//}

gretty {
    contextPath = ''
}

//task('JettyStartGWT', type: JettyStartTask) {
//    interactive = false
//    dependsOn(':stroom-app-gwt:gwtDevMode', ':stroom-dashboard-gwt:gwtDevMode')
//}
//task('JettyDebugGWT', type: JettyStartTask) {
//    debug = true
//    interactive = false
//    dependsOn(':stroom-app-gwt:gwtDevMode', ':stroom-dashboard-gwt:gwtDevMode')
//}




//task MyRun(dependsOn: ':stroom-app-gwt:gwtCompile', ':stroom-dashboard-gwt:gwtCompile')

//jettyStart {}.dependsOn(':stroom-app-gwt:gwtDevMode', ':stroom-dashboard-gwt:gwtDevMode')

/* Change context path (base url). otherwise defaults to name of project */
//appRun.contextPath = ''

//jettyRunWar.contextPath = ''
//jettyRun.contextPath = ''

